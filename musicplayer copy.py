# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MusicPlayer.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import pygame, sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from pygame.mixer import pause
import time


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(715, 572)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setGeometry(QtCore.QRect(310, 370, 101, 91))
        self.pushButton_2.setStyleSheet("QPushButton{\n"
"border-radius: 30px;\n"
"background-color: white;\n"
"}\n"
"QPushButton:hover{\n"
"background-color: rgb(216, 216, 216);\n"
"}")
        self.pushButton_2.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../../Downloads/player music bottons vector color set/fuckd - C贸pia.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_2.setIcon(icon)
        self.pushButton_2.setIconSize(QtCore.QSize(54, 54))
        self.pushButton_2.setObjectName("pushButton_2")
        self.lineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit.setGeometry(QtCore.QRect(160, 160, 371, 31))
        self.lineEdit.setObjectName("lineEdit")
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setGeometry(QtCore.QRect(580, 370, 101, 91))
        self.pushButton_3.setStyleSheet("QPushButton{\n"
"border-radius: 30px;\n"
"background-color: white;\n"
"}\n"
"QPushButton:hover{\n"
"background-color: rgb(216, 216, 216);\n"
"}")
        self.pushButton_3.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../../../Downloads/player music bottons vector color set/loop.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_3.setIcon(icon1)
        self.pushButton_3.setIconSize(QtCore.QSize(54, 54))
        self.pushButton_3.setObjectName("pushButton_3")
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setGeometry(QtCore.QRect(360, 240, 61, 31))
        self.pushButton_4.setStyleSheet("QPushButton{\n"
"border-radius: 10px;\n"
"background-color: white;\n"
"font: 14pt \"Arial\";\n"
"}\n"
"QPushButton:hover{\n"
"background-color: rgb(216, 216, 216);\n"
"}")
        self.pushButton_4.setIconSize(QtCore.QSize(54, 54))
        self.pushButton_4.setObjectName("pushButton_4")
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setGeometry(QtCore.QRect(280, 240, 61, 31))
        self.pushButton_5.setStyleSheet("QPushButton{\n"
"border-radius: 10px;\n"
"background-color: white;\n"
"font: 14pt \"Arial\";\n"
"}\n"
"QPushButton:hover{\n"
"background-color: rgb(216, 216, 216);\n"
"}")
        self.pushButton_5.setIconSize(QtCore.QSize(54, 54))
        self.pushButton_5.setObjectName("pushButton_5")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(260, 20, 251, 61))
        self.label.setStyleSheet("font: 87 22pt \"Arial\";")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(330, 190, 251, 61))
        self.label_2.setStyleSheet("font: 87 12pt \"Arial\";")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(590, 340, 161, 16))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(350, 340, 47, 13))
        self.label_4.setObjectName("label_4")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(430, 400, 75, 23))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menuBar = QtWidgets.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 715, 21))
        self.menuBar.setObjectName("menuBar")
        self.menuArquivos = QtWidgets.QMenu(self.menuBar)
        self.menuArquivos.setObjectName("menuArquivos")
        MainWindow.setMenuBar(self.menuBar)
        self.actionAbrir = QtWidgets.QAction(MainWindow)
        self.actionAbrir.setObjectName("actionAbrir")
        self.actionFechar = QtWidgets.QAction(MainWindow)
        self.actionFechar.setObjectName("actionFechar")
        self.menuArquivos.addAction(self.actionAbrir)
        self.menuArquivos.addAction(self.actionFechar)
        self.menuBar.addAction(self.menuArquivos.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        
        def abrir():
            try:
                test = QFileDialog.getOpenFileName(None, 'Open file', '', 'music(*.mp3)')
                print(test)
                local = self.lineEdit.setText(test[0])
                global file
                file = test[0]
                pygame.init()
                pygame.mixer.init()
                pygame.mixer.music.load(file)
                pygame.mixer.music.play(0)
                pygame.mixer.music.set_volume(0.4921875)
                self.label_3.setText("Loop Desligado")
                icon.addPixmap(QtGui.QPixmap("../../../Downloads/player music bottons vector color set/fuckd - C贸pia"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.pushButton_2.setIcon(icon)
            except:
                print("error!")

        
        self.actionAbrir.triggered.connect(abrir)
  
        def exit():
            sys. exit() 
        
        self.actionFechar.triggered.connect(exit)

        if self.label_4.text() == "Play":
                    icon.addPixmap(QtGui.QPixmap("../../../Downloads/player music bottons vector color set/fuckd.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                    self.pushButton_2.setIcon(icon)
        def pausar():
            if self.label_4.text() == "Play":
                try:
                    pygame.mixer.music.pause()
                    self.label_4.setText("Paused")
                    icon.addPixmap(QtGui.QPixmap("../../../Downloads/player music bottons vector color set/fuckd.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                    self.pushButton_2.setIcon(icon)
                except:
                    print("errei")
            elif self.label_4.text() == "Paused":
                try:
                    pygame.mixer.music.unpause()
                    self.label_4.setText("Play")
                    icon.addPixmap(QtGui.QPixmap("../../../Downloads/player music bottons vector color set/fuckd - C贸pia.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                    self.pushButton_2.setIcon(icon)
                except:
                    print("error!")
        

        self.pushButton_2.clicked.connect(pausar)

        def loop():
            if self.label_3.text() == "Loop Desligado":
                try:
                    pygame.mixer.music.play(-1)
                    self.label_3.setText("Loop Ligado")
                except:
                    print("error!")

            elif self.label_3.text() == "Loop Ligado":
                pygame.mixer.music.play(0)
                self.label_3.setText("Loop Desligado")

            else:
                print("O que Aconteceu!?:??")
        
        self.pushButton_3.clicked.connect(loop)

        def aumenta():
            vol = pygame.mixer.music.get_volume()
            print(vol)
            vol = float(vol)
            print(vol)
            pygame.mixer.music.set_volume(vol-0.3)
            pygame.mixer.music.set_volume(vol-0.07)

        self.pushButton_5.clicked.connect(aumenta)

        def diminui():
            vol = pygame.mixer.music.get_volume()
            print(vol)
            vol = float(vol)
            print(vol)
            pygame.mixer.music.set_volume(vol+0.07)
            mostra()
            

        self.pushButton_4.clicked.connect(diminui)

        def mostra():
            if pygame.mixer.music.get_busy():
                pygame.mixer.music.load(file)
                pygame.mixer.music.play()
                print("n")
            else:
                icon.addPixmap(QtGui.QPixmap("../../../Downloads/player music bottons vector color set/fuckd - C贸pia.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
                self.pushButton_2.setIcon(icon)
                pygame.mixer.music.load(file)
                pygame.mixer.music.play()
                print("s")

        self.pushButton.clicked.connect(mostra)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_4.setText(_translate("MainWindow", "+"))
        self.pushButton_5.setText(_translate("MainWindow", "-"))
        self.label.setText(_translate("MainWindow", "Music Player"))
        self.label_2.setText(_translate("MainWindow", "volume"))
        self.label_3.setText(_translate("MainWindow", "Loop Desligado"))
        self.label_4.setText(_translate("MainWindow", "Play"))
        self.pushButton.setText(_translate("MainWindow", "Restart"))
        self.menuArquivos.setTitle(_translate("MainWindow", "Arquivos"))
        self.actionAbrir.setText(_translate("MainWindow", "Abrir"))
        self.actionFechar.setText(_translate("MainWindow", "Fechar"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
